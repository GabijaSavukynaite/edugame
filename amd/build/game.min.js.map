{"version":3,"sources":["../src/game.js"],"names":["require","config","paths","define","Phaser","$","Y","notification","ajax","init","q","qid","type","AUTO","width","height","physics","default","arcade","gravity","y","debug","scene","preload","load","image","multiatlas","create","update","parent","Game","questions","edugameId","clouds","player","cursors","score","scoreText","answersText","add","staticGroup","position","i","answers","length","push","text","answer","fontFamily","sprite","setBounce","setCollideWorldBounds","anims","key","frames","frame","frameRate","overlap","touchCloud","fontSize","fill","input","keyboard","createCursorKeys","left","isDown","setFlipX","setVelocityX","play","right","up","body","blocked","down","setVelocityY","cloud","console","log","disableBody","setText","endGame","call","methodname","args","edugameid","fail","exception"],"mappings":"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","sourcesContent":["// Put this file in path/to/plugin/amd/src\n// You can call it anything you like\nrequire.config({\n    paths: {\n        \"Phaser\": \"https://cdnjs.cloudflare.com/ajax/libs/phaser/3.22.0/phaser.min\"\n    }\n});\n\n// https://phaser.discourse.group/t/is-it-possible-to-use-phaser-3-with-amd-requirejs-and-typescript/2961/5\n\ndefine(['Phaser', 'jquery', 'core/yui', 'core/notification', 'core/ajax'], function (Phaser, $, Y, notification, ajax) {\n\n    return {\n        init: function (q, qid) {\n\n            var config = {\n                type: Phaser.AUTO,\n                width: 800,\n                height: 600,\n                physics: {\n                    default: 'arcade',\n                    arcade: {\n                        gravity: { y: 300 },\n                        debug: false\n                    }\n                },\n                scene: {\n                    preload: preload,\n                    create: create,\n                    update: update\n                },\n                parent: \"mod_edugame_game\"\n            };\n\n            new Phaser.Game(config);\n\n            var questions = q;\n            var edugameId = qid;\n            var clouds;\n            var player;\n            var cursors;\n            var score = 0;\n            var scoreText;\n            //var questionText;\n            var answersText = [];\n            //var level = 1;\n\n\n            // var questions = [\n            //     {\n            //         question: \"klausimas1 \", answers: [\n            //             { answer: \"atsakymas1\" },\n            //             { answer: \"atsakymas2\" },\n            //             { answer: \"atsakymas3\" }\n            //         ]\n            //     },\n            //     {\n            //         question: \"klausimas2 \", answers: [\n            //             { answer: \"atsakymas4\" },\n            //             { answer: \"atsakymas5\" },\n            //             { answer: \"atsakymas6\" }\n            //         ]\n            //     },\n            //     {\n            //         question: \"klausimas3 \", answers: [\n            //             { answer: \"atsakymas7\" },\n            //             { answer: \"atsakymas8\" },\n            //             { answer: \"atsakymas9\" }\n            //         ]\n            //     }\n            // ]\n\n            function preload() {\n                this.load.image('sky', 'pix/Background.png');\n                this.load.image('cloud', 'pix/gui/cloud.png');\n                this.load.multiatlas('player', 'pix/runner2.json', 'pix');\n            }\n\n            function create() {\n                this.add.image(400, 300, 'sky');\n\n                clouds = this.physics.add.staticGroup();\n\n                var position = 50;\n                for (var i = 0; i < questions[0].answers.length; i++) {\n                    clouds.create(position, 50, 'cloud');\n                    answersText.push(this.add.text(position, 0, questions[0].answers[i].answer,\n                        { fontFamily: 'Georgia, \"Goudy Bookletter 1911\", Times, serif' }));\n                    position += 280;\n                }\n\n                player = this.physics.add.sprite(100, 450, 'player', 'character/run/05.png');\n\n                player.setBounce(0.2);\n                player.setCollideWorldBounds(true);\n\n                // questionText = this.add.text(0, 0, questions[0].question,\n                //     { fontFamily: 'Georgia, \"Goudy Bookletter 1911\", Times, serif' });\n\n\n                const frameNames = [\n                    { key: 'player', frame: 'character/run/05.png' },\n                    { key: 'player', frame: 'character/run/01.png' },\n                    { key: 'player', frame: 'character/run/02.png' },\n                    { key: 'player', frame: 'character/run/03.png' },\n                    { key: 'player', frame: 'character/run/04.png' },\n                    { key: 'player', frame: 'character/run/05.png' },\n                ];\n                this.anims.create({ key: 'walk', frames: frameNames, frameRate: 20 });\n                this.physics.add.overlap(player, clouds, touchCloud, null, this);\n                scoreText = this.add.text(16, 16, 'score: 4', { fontSize: '32px', fill: '#000' });\n            }\n\n            function update() {\n                cursors = this.input.keyboard.createCursorKeys();\n                if (cursors.left.isDown) {\n                    player.setFlipX(true);\n                    player.setVelocityX(-200);\n                    player.anims.play('walk', true);\n\n                }\n                else if (cursors.right.isDown) {\n                    player.setFlipX(false);\n                    player.setVelocityX(200);\n                    player.anims.play('walk', true);\n                }\n                else {\n                    player.setVelocityX(0);\n                }\n\n                if (cursors.up.isDown && player.body.blocked.down) {\n                    player.setVelocityY(-730);\n                }\n            }\n\n            function touchCloud(player, cloud) {\n                console.log(\"touchCloud\"); // eslint-disable-line no-console\n                cloud.disableBody(true, true);\n\n                score += 15;\n                scoreText.setText('Score: ' + score);\n                // level++;\n                // if (level > questions.length) {\n                endGame();\n                // }\n                // else {\n                //     questionText = this.add.text(0, 0, questions[level - 1].question,\n                // { fontFamily: 'Georgia, \"Goudy Bookletter 1911\", Times, serif' });\n                //     for (var i in answersText) {\n                //         answersText[i].destroy();\n                //     }\n                //     answersText = []\n                //     var position = 50\n                //     for (var i in questions[level - 1].answers) {\n                //         answersText.push(this.add.text(position, 0, questions[level - 1].answers[i].answer,\n                // { fontFamily: 'Georgia, \"Goudy Bookletter 1911\", Times, serif' }))\n                //         position += 280\n                //     }\n                // }\n            }\n\n            function endGame() {\n                console.log(\"endGame id: \" + edugameId);// eslint-disable-line no-console\n                ajax.call([{\n                    methodname: 'mod_edugame_add_score',\n                    args: { edugameid: edugameId, score: score },\n                    fail: notification.exception\n                }]);\n            }\n\n        }\n    };\n});"],"file":"game.min.js"}